#define uObjC_NATIVE_TYPE NSBundle
#define uObjC_UNO_TYPE_IS_SEALED 1
#define uObjC_UNO_TYPE ::app::iOS::Foundation::NSBundle*
#define uObjC_UNO_TYPE_OBJECT ::app::iOS::Foundation::NSBundle__typeof()

#include <Foundation/Foundation.h>
#include <uObjC.Wrapper.h>
#include <uObjC.Proxy.h>

#if !uObjC_UNO_TYPE_IS_SEALED
@implementation uObjC_PROXY


+ (NSBundle *) mainBundle
{
    ::app::iOS::Foundation::NSBundle* __return = ::app::iOS::Foundation::NSBundle___mainBundle(NULL);
    return uObjC::Lifetime::GetNativeHandle((::uObject *)__return);
}












































































































































































































- (NSString *) pathForResource:(NSString *)name ofType:(NSString *)ext
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    ::uString* __return = __this->pathForResourceOfType(uObjC::UnoString(name), uObjC::UnoString(ext));
    return uObjC::NativeString(__return);
}









































































































































































































































































































@end
#endif // !uObjC_UNO_TYPE_IS_SEALED
