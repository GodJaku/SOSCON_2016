#define uObjC_NATIVE_TYPE NSURL
#define uObjC_UNO_TYPE_IS_SEALED 1
#define uObjC_UNO_TYPE ::app::iOS::Foundation::NSURL*
#define uObjC_UNO_TYPE_OBJECT ::app::iOS::Foundation::NSURL__typeof()

#include <Foundation/Foundation.h>
#include <uObjC.Wrapper.h>
#include <uObjC.Proxy.h>

#if !uObjC_UNO_TYPE_IS_SEALED
@implementation uObjC_PROXY




















- (instancetype) initFileURLWithPath:(NSString *)path
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    __this->initFileURLWithPath(uObjC::UnoString(path));
    return uObjC_OBJECT_HANDLE(__this);
}



















- (instancetype) initWithString:(NSString *)URLString
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    __this->initWithString(uObjC::UnoString(URLString));
    return uObjC_OBJECT_HANDLE(__this);
}












+ (instancetype) URLWithString:(NSString *)URLString
{
    ::id __return = ::app::iOS::Foundation::NSURL___urlWithString(NULL, uObjC::UnoString(URLString));
    return (::id)__return;
}



































































































































































- (NSString *) absoluteString
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    ::uString* __return = __this->absoluteString();
    return uObjC::NativeString(__return);
}












































































































































































































































































































@end
#endif // !uObjC_UNO_TYPE_IS_SEALED
