#define uObjC_NATIVE_TYPE UIImage
#define uObjC_UNO_TYPE_IS_SEALED 1
#define uObjC_UNO_TYPE ::app::iOS::UIKit::UIImage*
#define uObjC_UNO_TYPE_OBJECT ::app::iOS::UIKit::UIImage__typeof()

#include <UIKit/UIKit.h>
#include <uObjC.Wrapper.h>
#include <uObjC.Proxy.h>

#if !uObjC_UNO_TYPE_IS_SEALED
@implementation uObjC_PROXY


















+ (UIImage *) imageWithContentsOfFile:(NSString *)path
{
    ::app::iOS::UIKit::UIImage* __return = ::app::iOS::UIKit::UIImage___imageWithContentsOfFile(NULL, uObjC::UnoString(path));
    return uObjC::Lifetime::GetNativeHandle((::uObject *)__return);
}



































+ (UIImage *) imageWithCIImage:(CIImage *)ciImage
{
    ::app::iOS::UIKit::UIImage* __return = ::app::iOS::UIKit::UIImage___imageWithCIImage(NULL, (::app::iOS::CoreImage::CIImage*)uObjC::Lifetime::GetUnoObject(ciImage, ::app::iOS::CoreImage::CIImage__typeof()));
    return uObjC::Lifetime::GetNativeHandle((::uObject *)__return);
}



































































































































- (void) drawInRect:(CGRect)rect
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    __this->drawInRect(uObjC::Struct::ToUno_CGRect(rect, ::app::iOS::CoreGraphics::CGRect()));
}























































- (CGSize) size
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    ::app::iOS::CoreGraphics::CGSize __return = __this->size();
    return uObjC::Struct::FromUno_CGSize(__return, ::CGSize());
}

























































































































































@end
#endif // !uObjC_UNO_TYPE_IS_SEALED
