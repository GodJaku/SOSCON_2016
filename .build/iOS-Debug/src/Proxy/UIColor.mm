#define uObjC_NATIVE_TYPE UIColor
#define uObjC_UNO_TYPE_IS_SEALED 1
#define uObjC_UNO_TYPE ::app::iOS::UIKit::UIColor*
#define uObjC_UNO_TYPE_OBJECT ::app::iOS::UIKit::UIColor__typeof()

#include <UIKit/UIKit.h>
#include <uObjC.Wrapper.h>
#include <uObjC.Proxy.h>

#if !uObjC_UNO_TYPE_IS_SEALED
@implementation uObjC_PROXY


















+ (UIColor *) colorWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha
{
    ::app::iOS::UIKit::UIColor* __return = ::app::iOS::UIKit::UIColor___colorWithRedGreenBlueAlpha(NULL, (double)red, (double)green, (double)blue, (double)alpha);
    return uObjC::Lifetime::GetNativeHandle((::uObject *)__return);
}













































- (UIColor *) initWithRed:(CGFloat)red green:(CGFloat)green blue:(CGFloat)blue alpha:(CGFloat)alpha
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    __this->initWithRedGreenBlueAlpha((double)red, (double)green, (double)blue, (double)alpha);
    return uObjC_OBJECT_HANDLE(__this);
}























































































































































































- (CGColorRef) CGColor
{
    uObjC_PROXY_FUNCTION_PROLOGUE
    app::CGColorRef* __return = __this->cgColor();
    return (::CGColorRef)(size_t) __return;
}




















































































@end
#endif // !uObjC_UNO_TYPE_IS_SEALED
